//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Salon.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SalonEntities : DbContext
    {
        public SalonEntities()
            : base("name=SalonEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<Connections> Connections { get; set; }
        public virtual DbSet<ConnectionTypes> ConnectionTypes { get; set; }
        public virtual DbSet<Countries> Countries { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<Pictures> Pictures { get; set; }
        public virtual DbSet<StepOptions> StepOptions { get; set; }
        public virtual DbSet<Steps> Steps { get; set; }
        public virtual DbSet<Treatments> Treatments { get; set; }
        public virtual DbSet<TreatmentSteps> TreatmentSteps { get; set; }
        public virtual DbSet<Visits> Visits { get; set; }
        public virtual DbSet<VisitTasks> VisitTasks { get; set; }
    
        public virtual ObjectResult<GetWorkPerClass> GetWorkPerClass(string @class)
        {
            var classParameter = @class != null ?
                new ObjectParameter("class", @class) :
                new ObjectParameter("class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWorkPerClass>("GetWorkPerClass", classParameter);
        }
    
        public virtual ObjectResult<GetClasses> GetClasses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClasses>("GetClasses");
        }
    }
}
