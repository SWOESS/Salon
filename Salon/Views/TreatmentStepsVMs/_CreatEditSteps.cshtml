@model  List<Salon.Models.StepsVM>

@if (Model.Any())
{
    <div class="inline-text title">

        <p>@Html.DisplayNameFor(model => model[0].Title)</p>
        <p>@Html.DisplayNameFor(model => model[0].Description)</p>
        <p>@Html.DisplayNameFor(model => model[0].isSensitive)</p>
        <p>@Html.DisplayNameFor(model => model[0].isActive)</p>
        <p>@Html.DisplayNameFor(model => model[0].Duration)</p>
        <p>@Html.DisplayNameFor(model => model[0].Order)</p>
        <p></p>

    </div>
}
    <div class="panel-group" id="accordion-@ViewBag.TreatmentLoopId">
    @for (int i = 0; i < Model.Count(); i++)
    {
        <div class="panel">
            <div class="panel-heading panel-default">
                <div class="inline-text">
                    @Html.HiddenFor(modelItem => modelItem[i].TreatmentId, new { @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].TreatmentId" })
                    @Html.HiddenFor(modelItem => modelItem[i].StepsId, new { @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].StepsId" })
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Title, new { htmlAttributes = new { @class = "form-control", @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].Title" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Description, new { htmlAttributes = new { @class = "form-control", @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].Description" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].isSensitive, new { htmlAttributes = new { @class = "form-control", @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].isSensitive" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].isSensitive, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].isActive, new { htmlAttributes = new { @class = "form-control", @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].isActive" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].isActive, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Duration, new { htmlAttributes = new { @class = "form-control", @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].Duration" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Duration, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Order, new { htmlAttributes = new { @class = "form-control" , @Name = "[" + ViewBag.TreatmentLoopId + "][" + i + "].Order" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Order, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <a class="btn btn-default" data-toggle="collapse" data-target="#collapse-option-@ViewBag.TreatmentLoopId-@i" data-parent="#accordion-@ViewBag.TreatmentLoopId">Optionen</a>
                    </div>
                </div>
            </div>
            <div id="collapse-option-@ViewBag.TreatmentLoopId-@i" class="panel-collapse collapse">
                <div class="panel-body">
                    @{Html.RenderAction("CreatEditStepOptions", "TreatmentStepsVMs", new { id = Model[i].StepsId, tId = Model[i].TreatmentId });}
                </div>
            </div>
        </div>
       }
</div>