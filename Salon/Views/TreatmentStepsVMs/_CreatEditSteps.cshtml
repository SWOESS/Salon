@model IEnumerable<Salon.Models.StepsVM>

@if (Model.Any())
{
    <div class="inline-text title">

        <p>@Html.DisplayNameFor(model => model.Title)</p>
        <p>@Html.DisplayNameFor(model => model.Description)</p>
        <p>@Html.DisplayNameFor(model => model.isSensitive)</p>
        <p>@Html.DisplayNameFor(model => model.isActive)</p>
        <p>@Html.DisplayNameFor(model => model.Duration)</p>
        <p>@Html.DisplayNameFor(model => model.Order)</p>
        <p></p>

    </div>
}

    <div class="panel-group" id="accordion2">
        @foreach (var item in Model)
        {

            <div class="panel">
                <div class="panel-heading panel-default">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="inline-text">
                            @Html.HiddenFor(modelItem => item.TreatmentId)
                            @Html.HiddenFor(modelItem => item.StepsId)
                            <div class="form-group">
                                @Html.EditorFor(modelItem => item.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => item.Title, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => item.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => item.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => item.isSensitive, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => item.isSensitive, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => item.isActive, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => item.isActive, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => item.Duration, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => item.Duration, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(modelItem => item.Order, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(modelItem => item.Order, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.ActionLink("Optionnen", "CreatEditStepOptions", new { id = item.StepsId }, new { @class = "options-viewdetail btn btn-default", data_toggle = "collapse", data_target = "#collapse-step-" + item.StepsId, data_parent = "#accordion2" })
                                <input type="submit" value="Speichern" class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>
                <div id="collapse-step-@Html.DisplayFor(modelItem => item.StepsId)" class="panel-collapse collapse">
                    <div class="panel-body">
                    </div>
                </div>
            </div>
        }
    </div>