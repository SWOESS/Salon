@model IEnumerable<Salon.Models.Treatments>
@{
    ViewBag.Title = "CreatEdit";
}

<div id="treatments">
    <h2>Behandlungen bearbeiten/erstellen</h2>
    <div class="inline-text title">
        <p>@Html.DisplayNameFor(model => model.Title)</p>
        <p>@Html.DisplayNameFor(model => model.Description)</p>
        <p></p>
    </div>
    <div class="panel-group" id="accordion">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @foreach (var item in Model)
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(modelItem => item.TreatmentId)
                <div class="panel">
                    <div class="panel-heading panel-default">
                        <div class="inline-text">
                            <div class="form-group">
                                @Html.LabelFor(modelItem => item.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(modelItem => item.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(modelItem => item.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(modelItem => item.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(modelItem => item.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(modelItem => item.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <p>@Html.ActionLink("View Steps", "TreatmentSteps", new { id = item.TreatmentId }, new { @class = "steps-viewdetail btn btn-default", data_toggle = "collapse", data_target = "#collapse-" + item.TreatmentId })</p>
                        </div>
                    </div>
                    <div id="collapse-@Html.DisplayFor(modelItem => item.TreatmentId)" class="panel-collapse collapse">
                        <div class="panel-body">
                        </div>
                    </div>
                </div>
            }
        }

    </div>
</div>


@*@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Countries</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CountryId)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}