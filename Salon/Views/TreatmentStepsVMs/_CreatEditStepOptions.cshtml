@model List<Salon.Models.StepOptions>

@if (Model.Any())
{
    <div class="inline-text title">
        <p>@Html.DisplayNameFor(model => model.Position)</p>
        <p>@Html.DisplayNameFor(model => model.Option)</p>
        <p>@Html.DisplayNameFor(model => model.Description)</p>
        <p>@Html.DisplayNameFor(model => model.isActive)</p>
        <p></p>
    </div>

}
<div class="panel-group" id="accordion3">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        for (int i = 0; i < Model.Count() - 1; i++)
        {
        <div class="panel">
            <div class="panel-heading panel-default">
                @Html.HiddenFor(modelItem => modelItem[i].StepOptionId)
                <div class="inline-text">
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Position, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].Option, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].Option, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(modelItem => modelItem[i].isActive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(modelItem => modelItem[i].isActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        }
        <div class="special">
            <input type="submit" value="Speichern" class="btn btn-default" />
        </div>
    }
</div>