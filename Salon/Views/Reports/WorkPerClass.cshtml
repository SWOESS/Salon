@model IEnumerable<Salon.Views.ViewModels.WorkPerClassViewModel>

<link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" media="screen" runat="server" />

@{
	ViewBag.Title = "Work per student";
}

<h2>Arbeit nach Klasse</h2>

<div style="margin: 30px 0px 30px 0px; display: inline-block; width: 100%">
	<select class="form-control" style="width: 150px; height:40px; display: inline-block" id="classSelector">
		@foreach(var item in Model.First().GetClasses())
		{
			<option>@item</option>
		}
	</select>
	<button style="margin-left: 10px; width: 150px; height: 40px; display: inline-block; clear: both" class="btn btn-primary" onclick="changeClass();">Anzeigen</button>
	
    @*<button style="float: right; display: inline-block; width: 150px; height: 40px" class="btn btn-primary"  onclick="location.href='@Url.Action("WorkPerClassExport", "Reports", new { export = "excel" })'">Download &#x21e9</button>*@
    <a style="float: right; display: inline-block; width: 150px; height: 40px" class="btn btn-primary" id="export">Download &#x21e9</a>
</div>

@if (ViewBag.Message != null)
{
	<script type="text/javascript">
			window.onload = function () {
				alert("@ViewBag.Message");
			};
	</script>
}

<div id="workTable" style="display: none;">
	
</div>

<script>
	function changeClass() {
		$.ajax({
			url: "/reports/workperclass?cl=" + $("#classSelector").val(),
			type: "get",
			success: function (result) {
				$("#workTable").html(result);
				$("#workTable").show();
			}
		});
	}

	function showResult() {
	    alert("TEST");
	}
</script>

<script src="~/Scripts/jquery-1.10.2.js"></script>

<script>
    function exportTableToCSV($table, filename) {
        var $headers = $table.find('tr:has(th)')
            , $rows = $table.find('tr:has(td)')

            // Temporary delimiter characters unlikely to be typed by keyboard
            // This is to avoid accidentally splitting the actual contents
            , tmpColDelim = String.fromCharCode(11) // vertical tab character
            , tmpRowDelim = String.fromCharCode(0) // null character

            // actual delimiter characters for CSV format
            , colDelim = '";"'
            , rowDelim = '"\r\n"';

        // Grab text from table into CSV formatted string
        var csv = '"';
        csv += formatRows($headers.map(grabRow));
        csv += rowDelim;
        csv += formatRows($rows.map(grabRow)) + '"';

        // Data URI
        var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

        // For IE (tested 10+)
        if (window.navigator.msSaveOrOpenBlob) {
            var blob = new Blob([decodeURIComponent(encodeURI(csv))], {
                type: "text/csv;charset=utf-8;"
            });
            navigator.msSaveBlob(blob, filename);
        } else {
            $(this)
                .attr({
                    'download': filename
                    , 'href': csvData
                    //,'target' : '_blank' //if you want it to open in a new window
                });
        }

        //------------------------------------------------------------
        // Helper Functions
        //------------------------------------------------------------
        // Format the output so it has the appropriate delimiters
        function formatRows(rows) {
            return rows.get().join(tmpRowDelim)
                .split(tmpRowDelim).join(rowDelim)
                .split(tmpColDelim).join(colDelim);
        }
        // Grab and format a row from the table
        function grabRow(i, row) {

            var $row = $(row);
            //for some reason $cols = $row.find('td') || $row.find('th') won't work...
            var $cols = $row.find('td');
            if (!$cols.length) $cols = $row.find('th');

            return $cols.map(grabCol)
                .get().join(tmpColDelim);
        }
        // Grab and format a column from the table
        function grabCol(j, col) {
            var $col = $(col),
                $text = $col.text();

            return $text.replace('"', '""'); // escape double quotes

        }
    }


    // This must be a hyperlink
    $("#export").click(function (event) {
        var outputFile = 'Arbeit' + $('#classSelector').val();
        outputFile = outputFile.replace('.csv', '') + '.csv'
        // CSV
        exportTableToCSV.apply(this, [$('#worktable > ajaxContent > searchtable'), outputFile]);

        // IF CSV, don't do event.preventDefault() or return false
        // We actually need this to be a typical hyperlink
    });
</script>